<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="&amp;copy; 2017 - ASP.NET Core Exemplo Localização" xml:space="preserve">
    <value>&amp;copy; 2017 - AspNetCoreLocalizationSample</value>
  </data>
  <data name="Aplicação Exemplo" xml:space="preserve">
    <value>Sample Application</value>
  </data>
  <data name="Aqui tem algumas informações sobre sua aplicação" xml:space="preserve">
    <value>Here is some information about your application.</value>
  </data>
  <data name="Cancelar" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Confirmar" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Conta" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="Contas" xml:space="preserve">
    <value>Accounts</value>
  </data>
  <data name="Contato" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="Controle Financeiro" xml:space="preserve">
    <value>Financial Control</value>
  </data>
  <data name="Criar" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Criar um Tipo de Conta" xml:space="preserve">
    <value>Create an Account Type</value>
  </data>
  <data name="Criar uma Conta" xml:space="preserve">
    <value>Create an Account</value>
  </data>
  <data name="de" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="Detalhes" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Detalhes da Conta" xml:space="preserve">
    <value>Account Details</value>
  </data>
  <data name="Detalhes do Tipo de Conta" xml:space="preserve">
    <value>Account Type Details</value>
  </data>
  <data name="Editar" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Excluir" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Idioma" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Linguagem" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Lista" xml:space="preserve">
    <value>List</value>
  </data>
  <data name="Listar" xml:space="preserve">
    <value>List</value>
  </data>
  <data name="Mantenha isso vazio" xml:space="preserve">
    <value>Keep it empty</value>
  </data>
  <data name="Modelo Exemplo" xml:space="preserve">
    <value>Sample Model</value>
  </data>
  <data name="Página Inicial" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Salvar" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Sobre" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Tem certeza de que deseja excluir isso?" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="Tente informar um nome longo" xml:space="preserve">
    <value>Try a long name</value>
  </data>
  <data name="Tente informar um número inválido" xml:space="preserve">
    <value>Try a invalid number</value>
  </data>
  <data name="Tipo" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Tipo de Conta" xml:space="preserve">
    <value>Account Type</value>
  </data>
  <data name="Tipos de Conta" xml:space="preserve">
    <value>Accounts Type</value>
  </data>
  <data name="Voltar para a lista" xml:space="preserve">
    <value>Back to list</value>
  </data>
  <data name="Índice" xml:space="preserve">
    <value>Index</value>
  </data>
</root>